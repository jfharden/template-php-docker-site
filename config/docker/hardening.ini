; This hardening file is adapted from the owasp recomendation at
; https://www.owasp.org/index.php/PHP_Configuration_Cheat_Sheet

; Error handling
expose_php              = Off
error_reporting         = E_ALL
display_errors          = Off
display_startup_errors  = Off
log_errors              = On
ignore_repeated_errors  = Off

; General settings
doc_root                = /var/www/html/
open_basedir            = /var/www/html/:/secrets/
include_path            = .:/usr/local/lib/php/

allow_url_fopen         = Off
allow_url_include       = Off
; The original rec is to use GPSE here, but we need cookies for session management so
; we are going to add C for COOKIES in
variables_order         = "GPSEC"
allow_webdav_methods    = Off
register_globals        = Off
safe_mode               = Off
session.gc_maxlifetime  = 600

; File upload handling
file_uploads            = Off
enable_dl               = On
disable_functions       = "system, exec, shell_exec, passthru, phpinfo, show_source, popen, proc_open,
                          fopen_with_path, dbmopen, dbase_open, putenv, move_uploaded_file
                          chdir, mkdir, rmdir, chmod, rename,
                          filepro, filepro_rowcount, filepro_retrieve, posix_mkfifo"

; Session settings
session.auto_start      = Off
session.save_path       = /sessions/
session.name            = BITSAND
session.hash_function   = 1
session.hash_bits_per_character = 6
session.use_trans_sid   = 0
; We would normally want to specify the cookie domain but this container will be used for lots of different domains,
; so we are going to fall back on the default behaviour and allow it to use the hostname of the server which generates
; the cookie
; session.cookie_domain   =
session.cookie_lifetime = 0
; This should normally be on, but we're terminating SSL on the ALB, the connection
; from there to the docker container is in a private VPC and HTTP not HTTPS
; So it's not possible for the apache webserver/php daemon to correctly know
; that the connection was HTTPS really
session.cookie_secure   = Off
session.cookie_httponly = 1
session.use_only_cookies= 1
session.cache_expire    = 30
default_socket_timeout  = 60

; Security paranoid checks
; Our application runs from the root so there is no path to look for
; session.referer_check   =
memory_limit            = 8M
post_max_size           = 8M
max_execution_time       = 60
report_memleaks         = On
track_errors            = Off
html_errors             = Off
